# A-SWARM Certificate Authority and Certificates
# Creates a self-signed CA and issues certificates for A-SWARM components
# Includes SPIFFE URI SANs for workload identity
---
# Self-signed ClusterIssuer for A-SWARM CA
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: aswarm-selfsigned-issuer
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: pki
spec:
  selfSigned: {}

---
# A-SWARM Root CA Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: aswarm-ca-cert
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: ca
spec:
  isCA: true
  commonName: "A-SWARM Root CA"
  subject:
    organizationalUnits: ["A-SWARM Security"]
    organizations: ["A-SWARM"]
    countries: ["US"]
  secretName: aswarm-ca
  privateKey:
    algorithm: ECDSA
    size: 256
  duration: 8760h # 1 year
  renewBefore: 720h # 30 days
  issuerRef:
    name: aswarm-selfsigned-issuer
    kind: ClusterIssuer
    group: cert-manager.io
  secretTemplate:
    labels:
      app.kubernetes.io/name: aswarm
      app.kubernetes.io/component: ca
      app.kubernetes.io/managed-by: cert-manager

---
# CA Issuer using the A-SWARM CA
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: aswarm-ca-issuer
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: pki
spec:
  ca:
    secretName: aswarm-ca

---
# Pheromone TLS Certificate with SPIFFE identity
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pheromone-tls-cert
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: pheromone
spec:
  commonName: "pheromone.aswarm.svc.cluster.local"
  dnsNames:
  - "pheromone"
  - "pheromone.aswarm"
  - "pheromone.aswarm.svc"
  - "pheromone.aswarm.svc.cluster.local"
  - "aswarm-pheromone"
  - "aswarm-pheromone.aswarm"
  - "aswarm-pheromone.aswarm.svc"
  - "aswarm-pheromone.aswarm.svc.cluster.local"
  uris:
  - "spiffe://aswarm.local/ns/aswarm/sa/aswarm-pheromone"
  secretName: pheromone-tls
  privateKey:
    algorithm: ECDSA
    size: 256
    rotationPolicy: Always
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth
  duration: 2160h # 90 days
  renewBefore: 720h # 30 days
  issuerRef:
    name: aswarm-ca-issuer
    kind: Issuer
    group: cert-manager.io
  secretTemplate:
    labels:
      app.kubernetes.io/name: aswarm
      app.kubernetes.io/component: pheromone
      app.kubernetes.io/managed-by: cert-manager

---
# Sentinel TLS Certificate with SPIFFE identity
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sentinel-tls-cert
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: sentinel
spec:
  commonName: "sentinel.aswarm.svc.cluster.local"
  dnsNames:
  - "sentinel"
  - "sentinel.aswarm" 
  - "sentinel.aswarm.svc"
  - "sentinel.aswarm.svc.cluster.local"
  - "aswarm-sentinel"
  - "aswarm-sentinel.aswarm"
  - "aswarm-sentinel.aswarm.svc"
  - "aswarm-sentinel.aswarm.svc.cluster.local"
  uris:
  - "spiffe://aswarm.local/ns/aswarm/sa/aswarm-sentinel"
  secretName: sentinel-tls
  privateKey:
    algorithm: ECDSA
    size: 256
    rotationPolicy: Always
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth
  duration: 2160h # 90 days
  renewBefore: 720h # 30 days
  issuerRef:
    name: aswarm-ca-issuer
    kind: Issuer
    group: cert-manager.io
  secretTemplate:
    labels:
      app.kubernetes.io/name: aswarm
      app.kubernetes.io/component: sentinel
      app.kubernetes.io/managed-by: cert-manager

---
# Red Swarm TLS Certificate with SPIFFE identity
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: redswarm-tls-cert
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: redswarm
spec:
  commonName: "redswarm.aswarm.svc.cluster.local"
  dnsNames:
  - "redswarm"
  - "redswarm.aswarm"
  - "redswarm.aswarm.svc"
  - "redswarm.aswarm.svc.cluster.local"
  - "aswarm-redswarm"
  - "aswarm-redswarm.aswarm"
  - "aswarm-redswarm.aswarm.svc"
  - "aswarm-redswarm.aswarm.svc.cluster.local"
  uris:
  - "spiffe://aswarm.local/ns/aswarm/sa/aswarm-redswarm"
  secretName: redswarm-tls
  privateKey:
    algorithm: ECDSA
    size: 256
    rotationPolicy: Always
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth
  duration: 2160h # 90 days
  renewBefore: 720h # 30 days
  issuerRef:
    name: aswarm-ca-issuer
    kind: Issuer
    group: cert-manager.io
  secretTemplate:
    labels:
      app.kubernetes.io/name: aswarm
      app.kubernetes.io/component: redswarm
      app.kubernetes.io/managed-by: cert-manager

---
# Blue Swarm TLS Certificate with SPIFFE identity
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: blueswarm-tls-cert
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: blueswarm
spec:
  commonName: "blueswarm.aswarm.svc.cluster.local"
  dnsNames:
  - "blueswarm"
  - "blueswarm.aswarm"
  - "blueswarm.aswarm.svc"
  - "blueswarm.aswarm.svc.cluster.local"
  - "aswarm-blueswarm"
  - "aswarm-blueswarm.aswarm"
  - "aswarm-blueswarm.aswarm.svc"
  - "aswarm-blueswarm.aswarm.svc.cluster.local"
  uris:
  - "spiffe://aswarm.local/ns/aswarm/sa/aswarm-blueswarm"
  secretName: blueswarm-tls
  privateKey:
    algorithm: ECDSA
    size: 256
    rotationPolicy: Always
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth
  duration: 2160h # 90 days
  renewBefore: 720h # 30 days
  issuerRef:
    name: aswarm-ca-issuer
    kind: Issuer
    group: cert-manager.io
  secretTemplate:
    labels:
      app.kubernetes.io/name: aswarm
      app.kubernetes.io/component: blueswarm
      app.kubernetes.io/managed-by: cert-manager