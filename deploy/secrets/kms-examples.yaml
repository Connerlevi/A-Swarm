# A-SWARM KMS Integration Examples
# Production secret management with key rotation

---
# AWS KMS Example using External Secrets Operator
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aswarm-kms-store
  namespace: aswarm
spec:
  provider:
    aws:
      service: KMS
      region: us-west-2
      auth:
        secretRef:
          accessKeyID:
            name: aws-credentials
            key: access-key-id
          secretAccessKey:
            name: aws-credentials
            key: secret-access-key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aswarm-fastpath-key
  namespace: aswarm
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-kms-store
    kind: SecretStore
  target:
    name: aswarm-fastpath-key
    creationPolicy: Owner
  data:
  - secretKey: key
    remoteRef:
      key: arn:aws:kms:us-west-2:123456789012:key/12345678-1234-1234-1234-123456789012
      property: fastpath-key

---
# GCP KMS Example
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aswarm-gcp-kms
  namespace: aswarm
spec:
  provider:
    gcpsm:
      projectId: your-project-id
      auth:
        workloadIdentity:
          clusterLocation: us-central1
          clusterName: your-cluster
          serviceAccountRef:
            name: external-secrets-sa

---
# Azure Key Vault Example  
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aswarm-akv-store
  namespace: aswarm
spec:
  provider:
    azurekv:
      vaultUrl: https://your-vault.vault.azure.net/
      tenantId: your-tenant-id
      authType: ManagedIdentity

---
# Manual Key Rotation Script
apiVersion: v1
kind: ConfigMap
metadata:
  name: key-rotation-script
  namespace: aswarm
data:
  rotate-keys.sh: |
    #!/bin/bash
    # A-SWARM Fast-path Key Rotation
    # Usage: ./rotate-keys.sh [new-key-base64]
    
    set -euo pipefail
    
    NAMESPACE=${NAMESPACE:-aswarm}
    NEW_KEY=${1:-$(openssl rand -base64 32)}
    
    echo "Rotating A-SWARM fast-path key..."
    
    # Create new secret with timestamp
    TIMESTAMP=$(date +%Y%m%d-%H%M%S)
    kubectl create secret generic "aswarm-fastpath-key-${TIMESTAMP}" \
      --from-literal=key="${NEW_KEY}" \
      -n "${NAMESPACE}"
    
    # Update primary secret (rolling restart required)
    kubectl patch secret aswarm-fastpath-key \
      -n "${NAMESPACE}" \
      --type merge \
      -p "{\"stringData\":{\"key\":\"${NEW_KEY}\"}}"
    
    echo "Key rotated. Rolling restart required:"
    echo "kubectl rollout restart deployment/aswarm-pheromone -n ${NAMESPACE}"
    echo "kubectl rollout restart daemonset/aswarm-sentinel -n ${NAMESPACE}"

---
# SOPS Encrypted Secret Example
apiVersion: v1
kind: Secret
metadata:
  name: aswarm-fastpath-key-sops
  namespace: aswarm
type: Opaque
stringData:
  # Encrypt with: sops -e -i --kms arn:aws:kms:... secrets.yaml
  key: ENC[AES256_GCM,data:...,tag:...,type:str]