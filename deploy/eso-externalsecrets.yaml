# External Secrets for A-SWARM Components
# These mirror the backing secrets and create targets with names that workloads expect
---
# Fast-path HMAC key (matches workload expectation)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: aswarm-fastpath-key-external
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-secretstore
    kind: SecretStore
  target:
    name: aswarm-fastpath-key  # <-- match workload expectation
    creationPolicy: Merge      # safer during migration
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: aswarm
          app.kubernetes.io/component: fastpath
          managed-by: external-secrets
  data:
  - secretKey: key
    remoteRef:
      key: aswarm-fastpath-key
      property: key

---
# Pheromone TLS certificate (matches workload expectation)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: pheromone-tls-external
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-secretstore
    kind: SecretStore
  target:
    name: pheromone-tls  # <-- match workload expectation
    creationPolicy: Merge
    template:
      type: kubernetes.io/tls
      metadata:
        labels:
          app.kubernetes.io/name: aswarm
          app.kubernetes.io/component: pheromone
          managed-by: external-secrets
  data:
  - secretKey: tls.crt
    remoteRef:
      key: pheromone-tls
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: pheromone-tls
      property: tls.key

---
# Sentinel TLS certificate (matches workload expectation)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: sentinel-tls-external
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-secretstore
    kind: SecretStore
  target:
    name: sentinel-tls  # <-- match workload expectation
    creationPolicy: Merge
    template:
      type: kubernetes.io/tls
      metadata:
        labels:
          app.kubernetes.io/name: aswarm
          app.kubernetes.io/component: sentinel
          managed-by: external-secrets
  data:
  - secretKey: tls.crt
    remoteRef:
      key: sentinel-tls
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: sentinel-tls
      property: tls.key

---
# CA bundle for certificate validation (matches workload expectation)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: aswarm-ca-external
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-secretstore
    kind: SecretStore
  target:
    name: aswarm-ca  # <-- match workload expectation
    creationPolicy: Merge
    template:
      type: kubernetes.io/tls  # Changed to match cert-manager's output
      metadata:
        labels:
          app.kubernetes.io/name: aswarm
          app.kubernetes.io/component: ca
          managed-by: external-secrets
  data:
  - secretKey: ca.crt
    remoteRef:
      key: aswarm-ca
      property: ca.crt
  - secretKey: tls.crt
    remoteRef:
      key: aswarm-ca
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: aswarm-ca
      property: tls.key

---
# Red swarm TLS certificate (for future Red/Blue implementation)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: redswarm-tls-external
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-secretstore
    kind: SecretStore
  target:
    name: redswarm-tls
    creationPolicy: Merge
    template:
      type: kubernetes.io/tls
      metadata:
        labels:
          app.kubernetes.io/name: aswarm
          app.kubernetes.io/component: redswarm
          managed-by: external-secrets
  data:
  - secretKey: tls.crt
    remoteRef:
      key: redswarm-tls
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: redswarm-tls
      property: tls.key

---
# Blue swarm TLS certificate (for future Red/Blue implementation)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: blueswarm-tls-external
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aswarm-secretstore
    kind: SecretStore
  target:
    name: blueswarm-tls
    creationPolicy: Merge
    template:
      type: kubernetes.io/tls
      metadata:
        labels:
          app.kubernetes.io/name: aswarm
          app.kubernetes.io/component: blueswarm
          managed-by: external-secrets
  data:
  - secretKey: tls.crt
    remoteRef:
      key: blueswarm-tls
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: blueswarm-tls
      property: tls.key