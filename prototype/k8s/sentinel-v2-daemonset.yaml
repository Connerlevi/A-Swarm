apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aswarm-sentinel-v2
  namespace: aswarm
  labels:
    app.kubernetes.io/name: aswarm-sentinel
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/version: v0.2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: aswarm-sentinel
      app.kubernetes.io/component: sentinel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aswarm-sentinel
        app.kubernetes.io/component: sentinel
        app.kubernetes.io/version: v0.2
    spec:
      serviceAccountName: aswarm-sentinel-v2
      containers:
      - name: sentinel
        image: python:3.11-slim
        command:
        - /bin/bash
        - -c
        - |
          cd /app && pip install kubernetes && python -m sentinel.telemetry_v2 \
            --namespace=aswarm --cadence-ms=150
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PYTHONPATH
          value: "/app"
        volumeMounts:
        - name: app-code
          mountPath: /app
          readOnly: true
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m  
            memory: 20Mi
      volumes:
      - name: app-code
        configMap:
          name: aswarm-app-code
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aswarm-app-code
  namespace: aswarm
data:
  # This would be populated by the actual application code
  # For testing, we can mount the local directory or use init containers
  placeholder: "App code would be mounted here"